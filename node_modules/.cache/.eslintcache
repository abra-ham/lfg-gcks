[{"/Users/abraham/fun/gcksmint/src/index.tsx":"1","/Users/abraham/fun/gcksmint/src/reportWebVitals.ts":"2","/Users/abraham/fun/gcksmint/src/App.tsx":"3","/Users/abraham/fun/gcksmint/src/Minter.tsx":"4","/Users/abraham/fun/gcksmint/src/candy-machine.ts":"5","/Users/abraham/fun/gcksmint/src/PhaseHeader.tsx":"6","/Users/abraham/fun/gcksmint/src/MintButton.tsx":"7","/Users/abraham/fun/gcksmint/src/userSettings.tsx":"8","/Users/abraham/fun/gcksmint/src/utils.ts":"9","/Users/abraham/fun/gcksmint/src/countdown.tsx":"10","/Users/abraham/fun/gcksmint/src/connection.tsx":"11","/Users/abraham/fun/gcksmint/src/geckomponents/Main.js":"12","/Users/abraham/fun/gcksmint/src/geckomponents/Footer.js":"13"},{"size":502,"mtime":1641429830013,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1641429830014,"results":"16","hashOfConfig":"15"},{"size":2094,"mtime":1641567914389,"results":"17","hashOfConfig":"15"},{"size":12181,"mtime":1641572609047,"results":"18","hashOfConfig":"15"},{"size":12718,"mtime":1641429830013,"results":"19","hashOfConfig":"15"},{"size":4216,"mtime":1641429830013,"results":"20","hashOfConfig":"15"},{"size":3831,"mtime":1641572125670,"results":"21","hashOfConfig":"15"},{"size":4189,"mtime":1641429830014,"results":"22","hashOfConfig":"15"},{"size":4112,"mtime":1641429830014,"results":"23","hashOfConfig":"15"},{"size":3220,"mtime":1641429830013,"results":"24","hashOfConfig":"15"},{"size":14559,"mtime":1641429830013,"results":"25","hashOfConfig":"15"},{"size":4943,"mtime":1641436150393,"results":"26","hashOfConfig":"15"},{"size":1617,"mtime":1641436442630,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1tpfnoy",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/abraham/fun/gcksmint/src/index.tsx",[],["57","58"],"/Users/abraham/fun/gcksmint/src/reportWebVitals.ts",[],"/Users/abraham/fun/gcksmint/src/App.tsx",[],"/Users/abraham/fun/gcksmint/src/Minter.tsx",["59","60","61","62"],"/Users/abraham/fun/gcksmint/src/candy-machine.ts",[],"/Users/abraham/fun/gcksmint/src/PhaseHeader.tsx",[],"/Users/abraham/fun/gcksmint/src/MintButton.tsx",[],"/Users/abraham/fun/gcksmint/src/userSettings.tsx",[],"/Users/abraham/fun/gcksmint/src/utils.ts",[],"/Users/abraham/fun/gcksmint/src/countdown.tsx",[],"/Users/abraham/fun/gcksmint/src/connection.tsx",[],"/Users/abraham/fun/gcksmint/src/geckomponents/Main.js",["63","64","65","66","67"],"import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Footer } from './Footer'\n\nimport Gecko from './gecko.png'\nimport BannerLogo from './banner-logo.png'\n\nconst size = {\n  xs: '375px',\n  sm: '768px',\n  lg: '1200px',\n}\n\nconst device = {\n  xs: `(max-width: ${size.xs})`,\n  sm: `(max-width: ${size.sm})`,\n  lg: `(max-width: ${size.lg})`,\n}\n\nconst NavLink = styled.a`\n  font-size: 2rem;\n  font-family: 'Poppins-Bold';\n  color: white;\n  text-transform: uppercase;\n\n  @media screen and ${device.sm} {\n    font-size: 1.8rem;\n    margin: 0 1rem;\n  }\n`\n\nconst NavWrapper = styled.nav`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n\n  @media screen and ${device.sm} {\n    width: 100%;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 0;\n  }\n`\n\nconst NavSeparator = styled.div`\n  width: 5px;\n  height: 30px;\n  background-image: url('/fade-border.png');\n  background-size: contain;\n  margin: 0 2rem;\n\n  @media screen and ${device.sm} {\n    display: none;\n  }\n\n  @media screen and ${device.xs} {\n    display: none;\n  }\n`\n\nconst Nav = () => {\n  return (\n    <NavWrapper>\n      <NavLink data-atropos-offset=\"16\">Litepaper</NavLink>\n      <NavSeparator />\n\n      <NavSeparator />\n\n      <NavSeparator />\n      <NavLink data-atropos-offset=\"16\">Team</NavLink>\n    </NavWrapper>\n  )\n}\n\nconst BannerWrapper = styled.section`\n  width: 100%;\n  background: rgb(113, 24, 33);\n  background: radial-gradient(\n    circle,\n    rgba(113, 24, 33, 1) 0%,\n    rgba(20, 2, 6, 1) 100%\n  );\n  padding: 1.5rem 0;\n  display: flex;\n  flex-direction: column;\n\n  flex-wrap: wrap;\n\n  span {\n    font-size: 3rem;\n    color: white;\n  }\n\n  @media screen and ${device.sm} {\n    padding: 1rem 0;\n    max-width: 100%;\n  }\n\n  @media screen and ${device.xs} {\n    flex-direction: row;\n    max-height: 70vh;\n  }\n`\n\nconst Main = styled.main`\n  min-height: 100vh;\n  overflow: hidden;\n`\n\nconst AtroposWrapper = styled.section`\n  clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 90%, 0 100%);\n  background-color: #140206;\n  height: auto;\n\n  @media screen and ${device.xs} {\n    clip-path: polygon(0 0, 100% 0, 100% 100%, 50% 97%, 0 100%);\n  }\n`\n\nconst GeckoImageWrapper = styled.figure`\n  height: 500px;\n  width: 500px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and ${device.lg} {\n    img {\n      margin-top: -100px;\n    }\n  }\n\n  @media screen and ${device.xs} {\n    img {\n      margin-top: 10px;\n      margin-bottom: 10px;\n    }\n    width: 100%;\n    height: auto;\n  }\n`\n\nconst BoldBigText = styled.p`\n  font-size: 4rem;\n  font-family: 'Poppins-Bold';\n  text-transform: uppercase;\n  margin: 5px auto 0;\n  max-width: 80%;\n  text-align: center;\n  color: white;\n\n  @media screen and ${device.sm} {\n    font-size: 3rem;\n  }\n\n  @media screen and ${device.xs} {\n    margin-top: 2rem;\n    font-size: 2rem;\n    max-width: 90%;\n  }\n`\n\nconst RegularBigText = styled.p`\n  font-size: 2rem;\n  text-align: justify;\n  font-family: 'Poppins-Regular';\n  text-transform: uppercase;\n  margin: 5px auto 20px;\n  max-width: 80%;\n  color: #42413e;\n\n  @media screen and ${device.sm} {\n    font-size: 1.5rem;\n    margin-bottom: 5px;\n  }\n\n  @media screen and ${device.xs} {\n    margin-top: 2rem;\n    font-size: 1.5rem;\n    max-width: 90%;\n  }\n`\n\nconst BannerTop = styled.div`\n  width: 90%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n\n  @media screen and ${device.lg} {\n    width: 100%;\n    justify-content: center;\n    margin-top: 2rem;\n    margin-bottom: 4rem;\n  }\n\n  @media screen and ${device.xs} {\n    flex-direction: column-reverse;\n  }\n`\n\nconst BannerBottom = styled.div`\n  max-height: 10%;\n  width: 90%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media screen and ${device.sm} {\n    justify-content: center;\n    width: 100%;\n  }\n\n  @media screen and ${device.xs} {\n    height: 60%;\n    width: 100%;\n\n    img {\n      width: 100%;\n      height: auto;\n    }\n  }\n`\n\nconst GloriousLogo = () => (\n  <img\n    data-atropos-offset=\"-2\"\n    layout=\"fixed\"\n    src={BannerLogo}\n    alt=\"Cutest Gecko ever\"\n    width={620}\n    height={308}\n  />\n)\n\nconst Banner = () => {\n  return (\n    <AtroposWrapper>\n      <BannerWrapper>\n        <BoldBigText color=\"white\">Official Mint Site</BoldBigText>\n\n        <BannerBottom>\n          <GloriousLogo />\n          <GeckoImageWrapper>\n            <img\n              data-atropos-offset=\"1\"\n              layout=\"fixed\"\n              src={Gecko}\n              alt=\"Cutest Gecko ever\"\n              width={400}\n              height={351}\n            />\n          </GeckoImageWrapper>\n        </BannerBottom>\n      </BannerWrapper>\n    </AtroposWrapper>\n  )\n}\n\nexport default ({ children }) => {\n  return (\n    <React.Fragment>\n      <Main>\n        <Banner />\n        {children}\n      </Main>\n      <Footer />\n    </React.Fragment>\n  )\n}\n",["68","69"],"/Users/abraham/fun/gcksmint/src/geckomponents/Footer.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":25,"column":27,"nodeType":"76","messageId":"77","endLine":25,"endColumn":38},{"ruleId":"79","severity":1,"message":"80","line":265,"column":15,"nodeType":"81","messageId":"82","endLine":265,"endColumn":17},{"ruleId":"79","severity":1,"message":"80","line":276,"column":15,"nodeType":"81","messageId":"82","endLine":276,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":2,"column":18,"nodeType":"76","messageId":"77","endLine":2,"endColumn":21},{"ruleId":"83","severity":1,"message":"85","line":63,"column":7,"nodeType":"76","messageId":"77","endLine":63,"endColumn":10},{"ruleId":"83","severity":1,"message":"86","line":165,"column":7,"nodeType":"76","messageId":"77","endLine":165,"endColumn":21},{"ruleId":"83","severity":1,"message":"87","line":186,"column":7,"nodeType":"76","messageId":"77","endLine":186,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":266,"column":1,"nodeType":"90","endLine":276,"endColumn":2},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'PhaseHeader' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'css' is defined but never used.","'Nav' is assigned a value but never used.","'RegularBigText' is assigned a value but never used.","'BannerTop' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]