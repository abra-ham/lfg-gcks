{"ast":null,"code":"import Grid from\"@material-ui/core/Grid\";import Typography from\"@material-ui/core/Typography\";import{PhaseCountdown}from\"./countdown\";import{toDate}from\"./utils\";import{useWallet}from\"@solana/wallet-adapter-react\";import{publicSaleSettings,whitelistSettings,welcomeSettings,mintPanic}from\"./userSettings\";import{Container}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Phase;(function(Phase){Phase[Phase[\"AnticipationPhase\"]=0]=\"AnticipationPhase\";Phase[Phase[\"SetPrice\"]=1]=\"SetPrice\";Phase[Phase[\"GracePeriod\"]=2]=\"GracePeriod\";Phase[Phase[\"Lottery\"]=3]=\"Lottery\";Phase[Phase[\"RaffleFinished\"]=4]=\"RaffleFinished\";Phase[Phase[\"WaitForCM\"]=5]=\"WaitForCM\";Phase[Phase[\"Phase4\"]=6]=\"Phase4\";Phase[Phase[\"MintOff\"]=7]=\"MintOff\";Phase[Phase[\"WhiteListMint\"]=8]=\"WhiteListMint\";Phase[Phase[\"PublicMint\"]=9]=\"PublicMint\";Phase[Phase[\"Welcome\"]=10]=\"Welcome\";Phase[Phase[\"Panic\"]=11]=\"Panic\";})(Phase||(Phase={}));export function getPhase(candyMachine){var _toDate,_toDate2,_toDate3;var curr=new Date().getTime();// const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\nvar whiteListStart=(_toDate=toDate(whitelistSettings.startDate))===null||_toDate===void 0?void 0:_toDate.getTime();var whiteListEnd=(_toDate2=toDate(whitelistSettings.endDate))===null||_toDate2===void 0?void 0:_toDate2.getTime();var publicSaleStart=(_toDate3=toDate(publicSaleSettings.startDate))===null||_toDate3===void 0?void 0:_toDate3.getTime();// const publicSaleEnd = toDate(publicSaleSettings.endDate)?.getTime();\n//Countdown, WhiteList Minting, Public Minting,\nif(mintPanic.enabled===true){return Phase.Panic;}else if(publicSaleStart&&curr>publicSaleStart){return Phase.PublicMint;}else if(whitelistSettings.enabled&&whiteListStart&&whiteListEnd&&curr>whiteListStart&&curr<whiteListEnd){return Phase.WhiteListMint;}else{return Phase.Welcome;}}var Header=function Header(props){var phaseName=props.phaseName,desc=props.desc,date=props.date,status=props.status,countdownEnable=props.countdownEnable;return/*#__PURE__*/_jsxs(_Fragment,{children:[countdownEnable===true&&/*#__PURE__*/_jsx(Grid,{container:true,style:{position:\"absolute\",top:\"-30px\",left:\"0px\"},children:/*#__PURE__*/_jsx(Container,{style:{justifyContent:\"center\"},children:/*#__PURE__*/_jsx(PhaseCountdown,{date:toDate(date),style:{justifyContent:\"center\"},status:status||\"COMPLETE\"})})}),/*#__PURE__*/_jsx(Grid,{container:true,className:\"mintHeader\",alignItems:\"center\",children:/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{fontWeight:600,textAlign:\"center\"},className:\"pb-2\",children:phaseName})})}),desc&&/*#__PURE__*/_jsx(Typography,{className:\"pb-2\",variant:\"body1\",color:\"textSecondary\",children:desc})]});};export var PhaseHeader=function PhaseHeader(_ref){var phase=_ref.phase,candyMachine=_ref.candyMachine;var wallet=useWallet();console.log(\"D\",candyMachine);console.log(\"Wallet\",wallet);return/*#__PURE__*/_jsxs(_Fragment,{children:[phase===Phase.Panic&&/*#__PURE__*/_jsx(Header,{phaseName:mintPanic.title,desc:mintPanic.desc}),phase===Phase.Welcome&&/*#__PURE__*/_jsx(Header,{phaseName:welcomeSettings.title,desc:welcomeSettings.desc,date:welcomeSettings.countdownTo,countdownEnable:welcomeSettings.countdownEnable}),phase===Phase.WhiteListMint&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Header,{phaseName:whitelistSettings.title,desc:whitelistSettings.desc,date:whitelistSettings.endDate,countdownEnable:whitelistSettings.countdown,status:\"WHITELIST LIVE\"})}),phase===Phase.PublicMint&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Header,{phaseName:publicSaleSettings.title,desc:publicSaleSettings.desc,date:publicSaleSettings.endDate,countdownEnable:publicSaleSettings.countdown,status:\"LIVE\"})})]});};","map":{"version":3,"sources":["/Users/abraham/fun/gcksmint/src/PhaseHeader.tsx"],"names":["Grid","Typography","PhaseCountdown","toDate","useWallet","publicSaleSettings","whitelistSettings","welcomeSettings","mintPanic","Container","Phase","getPhase","candyMachine","curr","Date","getTime","whiteListStart","startDate","whiteListEnd","endDate","publicSaleStart","enabled","Panic","PublicMint","WhiteListMint","Welcome","Header","props","phaseName","desc","date","status","countdownEnable","position","top","left","justifyContent","fontWeight","textAlign","PhaseHeader","phase","wallet","console","log","title","countdownTo","countdown"],"mappings":"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","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PhaseCountdown } from \"./countdown\";\nimport { toDate } from \"./utils\";\nimport { CandyMachineAccount } from \"./candy-machine\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport {\n  publicSaleSettings,\n  whitelistSettings,\n  welcomeSettings,\n  mintPanic,\n} from \"./userSettings\";\nimport { Container } from \"@material-ui/core\";\n\nexport enum Phase {\n  AnticipationPhase, // FL, AKA Phase 0\n  SetPrice, // FL, AKA Phase 1\n  GracePeriod, // FL, AKA Phase 2\n  Lottery, // FL\n  RaffleFinished, // FL, AKA Phase 3\n  WaitForCM, // FL,\n  Phase4,\n  MintOff,\n  WhiteListMint,\n  PublicMint,\n  Welcome,\n  Panic,\n}\n\nexport function getPhase(\n  candyMachine: CandyMachineAccount | undefined\n): Phase {\n  const curr = new Date().getTime();\n  // const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\n  const whiteListStart = toDate(whitelistSettings.startDate)?.getTime();\n  const whiteListEnd = toDate(whitelistSettings.endDate)?.getTime();\n  const publicSaleStart = toDate(publicSaleSettings.startDate)?.getTime();\n  // const publicSaleEnd = toDate(publicSaleSettings.endDate)?.getTime();\n\n  //Countdown, WhiteList Minting, Public Minting,\n\n  if (mintPanic.enabled === true) {\n    return Phase.Panic;\n  } else if (publicSaleStart && curr > publicSaleStart) {\n    return Phase.PublicMint;\n  } else if (\n    whitelistSettings.enabled &&\n    whiteListStart &&\n    whiteListEnd &&\n    curr > whiteListStart &&\n    curr < whiteListEnd\n  ) {\n    return Phase.WhiteListMint;\n  } else {\n    return Phase.Welcome;\n  }\n}\n\nconst Header = (props: {\n  phaseName: string;\n  desc: string | undefined;\n  date?: anchor.BN | undefined;\n  status?: string;\n  countdown?: boolean;\n  countdownEnable?: boolean;\n}) => {\n  const { phaseName, desc, date, status, countdownEnable } = props;\n  return (\n    <>\n      {countdownEnable === true && (\n        <Grid\n          container\n          style={{ position: \"absolute\", top: \"-30px\", left: \"0px\" }}\n        >\n          <Container style={{ justifyContent: \"center\" }}>\n            <PhaseCountdown\n              date={toDate(date)}\n              style={{ justifyContent: \"center\" }}\n              status={status || \"COMPLETE\"}\n            />\n          </Container>\n        </Grid>\n      )}\n      <Grid container className=\"mintHeader\" alignItems=\"center\">\n        <Grid>\n          <Typography\n            variant=\"h5\"\n            style={{ fontWeight: 600, textAlign: \"center\" }}\n            className=\"pb-2\"\n          >\n            {phaseName}\n          </Typography>\n        </Grid>\n      </Grid>\n      {desc && (\n        <Typography className=\"pb-2\" variant=\"body1\" color=\"textSecondary\">\n          {desc}\n        </Typography>\n      )}\n    </>\n  );\n};\n\ntype PhaseHeaderProps = {\n  phase: Phase;\n\n  candyMachine?: CandyMachineAccount;\n \n  rpcUrl: string;\n};\n\nexport const PhaseHeader = ({\n  phase,\n  \n  candyMachine,\n \n  \n}: PhaseHeaderProps) => {\n  const wallet = useWallet();\n  console.log(\"D\", candyMachine);\n  console.log(\"Wallet\", wallet);\n\n  return (\n    <>\n      {phase === Phase.Panic && (\n        <Header phaseName={mintPanic.title} desc={mintPanic.desc} />\n      )}\n\n      {phase === Phase.Welcome && (\n        <Header\n          phaseName={welcomeSettings.title}\n          desc={welcomeSettings.desc}\n          date={welcomeSettings.countdownTo}\n          countdownEnable={welcomeSettings.countdownEnable}\n        />\n      )}\n\n      {phase === Phase.WhiteListMint && (\n        <>\n          <Header\n            phaseName={whitelistSettings.title}\n            desc={whitelistSettings.desc}\n            date={whitelistSettings.endDate}\n            countdownEnable={whitelistSettings.countdown}\n            status=\"WHITELIST LIVE\"\n          />\n        </>\n      )}\n\n      {phase === Phase.PublicMint && (\n        <>\n          <Header\n            phaseName={publicSaleSettings.title}\n            desc={publicSaleSettings.desc}\n            date={publicSaleSettings.endDate}\n            countdownEnable={publicSaleSettings.countdown}\n            status=\"LIVE\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}