{"ast":null,"code":"var _jsxFileName = \"/Users/abraham/fun/gcksmint/src/PhaseHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PhaseCountdown } from \"./countdown\";\nimport { toDate } from \"./utils\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { publicSaleSettings, whitelistSettings, welcomeSettings, mintPanic } from \"./userSettings\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let Phase;\n\n(function (Phase) {\n  Phase[Phase[\"AnticipationPhase\"] = 0] = \"AnticipationPhase\";\n  Phase[Phase[\"SetPrice\"] = 1] = \"SetPrice\";\n  Phase[Phase[\"GracePeriod\"] = 2] = \"GracePeriod\";\n  Phase[Phase[\"Lottery\"] = 3] = \"Lottery\";\n  Phase[Phase[\"RaffleFinished\"] = 4] = \"RaffleFinished\";\n  Phase[Phase[\"WaitForCM\"] = 5] = \"WaitForCM\";\n  Phase[Phase[\"Phase4\"] = 6] = \"Phase4\";\n  Phase[Phase[\"MintOff\"] = 7] = \"MintOff\";\n  Phase[Phase[\"WhiteListMint\"] = 8] = \"WhiteListMint\";\n  Phase[Phase[\"PublicMint\"] = 9] = \"PublicMint\";\n  Phase[Phase[\"Welcome\"] = 10] = \"Welcome\";\n  Phase[Phase[\"Panic\"] = 11] = \"Panic\";\n})(Phase || (Phase = {}));\n\nexport function getPhase(candyMachine) {\n  var _toDate, _toDate2, _toDate3;\n\n  const curr = new Date().getTime(); // const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\n\n  const whiteListStart = (_toDate = toDate(whitelistSettings.startDate)) === null || _toDate === void 0 ? void 0 : _toDate.getTime();\n  const whiteListEnd = (_toDate2 = toDate(whitelistSettings.endDate)) === null || _toDate2 === void 0 ? void 0 : _toDate2.getTime();\n  const publicSaleStart = (_toDate3 = toDate(publicSaleSettings.startDate)) === null || _toDate3 === void 0 ? void 0 : _toDate3.getTime(); // const publicSaleEnd = toDate(publicSaleSettings.endDate)?.getTime();\n  //Countdown, WhiteList Minting, Public Minting,\n\n  if (mintPanic.enabled === true) {\n    return Phase.Panic;\n  } else if (publicSaleStart && curr > publicSaleStart) {\n    return Phase.PublicMint;\n  } else if (whitelistSettings.enabled && whiteListStart && whiteListEnd && curr > whiteListStart && curr < whiteListEnd) {\n    return Phase.WhiteListMint;\n  } else {\n    return Phase.Welcome;\n  }\n}\n\nconst Header = props => {\n  const {\n    phaseName,\n    desc,\n    date,\n    status,\n    countdownEnable\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [countdownEnable === true && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        position: \"absolute\",\n        top: \"-30px\",\n        left: \"0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(PhaseCountdown, {\n          date: toDate(date),\n          style: {\n            justifyContent: \"center\"\n          },\n          status: status || \"COMPLETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"mintHeader\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontWeight: 600,\n            textAlign: \"center\"\n          },\n          className: \"pb-2\",\n          children: phaseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), desc && /*#__PURE__*/_jsxDEV(Typography, {\n      className: \"pb-2\",\n      variant: \"body1\",\n      color: \"textSecondary\",\n      children: desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Header;\nexport const PhaseHeader = _ref => {\n  _s();\n\n  let {\n    phase,\n    candyMachine\n  } = _ref;\n  const wallet = useWallet();\n  console.log(\"D\", candyMachine);\n  console.log(\"Wallet\", wallet);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [phase === Phase.Panic && /*#__PURE__*/_jsxDEV(Header, {\n      phaseName: mintPanic.title,\n      desc: mintPanic.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), phase === Phase.Welcome && /*#__PURE__*/_jsxDEV(Header, {\n      phaseName: welcomeSettings.title,\n      desc: welcomeSettings.desc,\n      date: welcomeSettings.countdownTo,\n      countdownEnable: welcomeSettings.countdownEnable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), phase === Phase.WhiteListMint && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        phaseName: whitelistSettings.title,\n        desc: whitelistSettings.desc,\n        date: whitelistSettings.endDate,\n        countdownEnable: whitelistSettings.countdown,\n        status: \"WHITELIST LIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), phase === Phase.PublicMint && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        phaseName: publicSaleSettings.title,\n        desc: publicSaleSettings.desc,\n        date: publicSaleSettings.endDate,\n        countdownEnable: publicSaleSettings.countdown,\n        status: \"LIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(PhaseHeader, \"i+/qxb0flJRE8MgvazOGMkNRtsk=\", false, function () {\n  return [useWallet];\n});\n\n_c2 = PhaseHeader;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"PhaseHeader\");","map":{"version":3,"sources":["/Users/abraham/fun/gcksmint/src/PhaseHeader.tsx"],"names":["Grid","Typography","PhaseCountdown","toDate","useWallet","publicSaleSettings","whitelistSettings","welcomeSettings","mintPanic","Container","Phase","getPhase","candyMachine","curr","Date","getTime","whiteListStart","startDate","whiteListEnd","endDate","publicSaleStart","enabled","Panic","PublicMint","WhiteListMint","Welcome","Header","props","phaseName","desc","date","status","countdownEnable","position","top","left","justifyContent","fontWeight","textAlign","PhaseHeader","phase","wallet","console","log","title","countdownTo","countdown"],"mappings":"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","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { PhaseCountdown } from \"./countdown\";\nimport { toDate } from \"./utils\";\nimport { CandyMachineAccount } from \"./candy-machine\";\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport {\n  publicSaleSettings,\n  whitelistSettings,\n  welcomeSettings,\n  mintPanic,\n} from \"./userSettings\";\nimport { Container } from \"@material-ui/core\";\n\nexport enum Phase {\n  AnticipationPhase, // FL, AKA Phase 0\n  SetPrice, // FL, AKA Phase 1\n  GracePeriod, // FL, AKA Phase 2\n  Lottery, // FL\n  RaffleFinished, // FL, AKA Phase 3\n  WaitForCM, // FL,\n  Phase4,\n  MintOff,\n  WhiteListMint,\n  PublicMint,\n  Welcome,\n  Panic,\n}\n\nexport function getPhase(\n  candyMachine: CandyMachineAccount | undefined\n): Phase {\n  const curr = new Date().getTime();\n  // const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\n  const whiteListStart = toDate(whitelistSettings.startDate)?.getTime();\n  const whiteListEnd = toDate(whitelistSettings.endDate)?.getTime();\n  const publicSaleStart = toDate(publicSaleSettings.startDate)?.getTime();\n  // const publicSaleEnd = toDate(publicSaleSettings.endDate)?.getTime();\n\n  //Countdown, WhiteList Minting, Public Minting,\n\n  if (mintPanic.enabled === true) {\n    return Phase.Panic;\n  } else if (publicSaleStart && curr > publicSaleStart) {\n    return Phase.PublicMint;\n  } else if (\n    whitelistSettings.enabled &&\n    whiteListStart &&\n    whiteListEnd &&\n    curr > whiteListStart &&\n    curr < whiteListEnd\n  ) {\n    return Phase.WhiteListMint;\n  } else {\n    return Phase.Welcome;\n  }\n}\n\nconst Header = (props: {\n  phaseName: string;\n  desc: string | undefined;\n  date?: anchor.BN | undefined;\n  status?: string;\n  countdown?: boolean;\n  countdownEnable?: boolean;\n}) => {\n  const { phaseName, desc, date, status, countdownEnable } = props;\n  return (\n    <>\n      {countdownEnable === true && (\n        <Grid\n          container\n          style={{ position: \"absolute\", top: \"-30px\", left: \"0px\" }}\n        >\n          <Container style={{ justifyContent: \"center\" }}>\n            <PhaseCountdown\n              date={toDate(date)}\n              style={{ justifyContent: \"center\" }}\n              status={status || \"COMPLETE\"}\n            />\n          </Container>\n        </Grid>\n      )}\n      <Grid container className=\"mintHeader\" alignItems=\"center\">\n        <Grid>\n          <Typography\n            variant=\"h5\"\n            style={{ fontWeight: 600, textAlign: \"center\" }}\n            className=\"pb-2\"\n          >\n            {phaseName}\n          </Typography>\n        </Grid>\n      </Grid>\n      {desc && (\n        <Typography className=\"pb-2\" variant=\"body1\" color=\"textSecondary\">\n          {desc}\n        </Typography>\n      )}\n    </>\n  );\n};\n\ntype PhaseHeaderProps = {\n  phase: Phase;\n\n  candyMachine?: CandyMachineAccount;\n \n  rpcUrl: string;\n};\n\nexport const PhaseHeader = ({\n  phase,\n  \n  candyMachine,\n \n  \n}: PhaseHeaderProps) => {\n  const wallet = useWallet();\n  console.log(\"D\", candyMachine);\n  console.log(\"Wallet\", wallet);\n\n  return (\n    <>\n      {phase === Phase.Panic && (\n        <Header phaseName={mintPanic.title} desc={mintPanic.desc} />\n      )}\n\n      {phase === Phase.Welcome && (\n        <Header\n          phaseName={welcomeSettings.title}\n          desc={welcomeSettings.desc}\n          date={welcomeSettings.countdownTo}\n          countdownEnable={welcomeSettings.countdownEnable}\n        />\n      )}\n\n      {phase === Phase.WhiteListMint && (\n        <>\n          <Header\n            phaseName={whitelistSettings.title}\n            desc={whitelistSettings.desc}\n            date={whitelistSettings.endDate}\n            countdownEnable={whitelistSettings.countdown}\n            status=\"WHITELIST LIVE\"\n          />\n        </>\n      )}\n\n      {phase === Phase.PublicMint && (\n        <>\n          <Header\n            phaseName={publicSaleSettings.title}\n            desc={publicSaleSettings.desc}\n            date={publicSaleSettings.endDate}\n            countdownEnable={publicSaleSettings.countdown}\n            status=\"LIVE\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}