{"ast":null,"code":"import _objectSpread from\"/Users/abraham/fun/gcksmint/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/abraham/fun/gcksmint/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/abraham/fun/gcksmint/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/abraham/fun/gcksmint/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"/Users/abraham/fun/gcksmint/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useMemo,useState}from\"react\";import styled from\"styled-components\";import{Container,Snackbar}from\"@material-ui/core\";import Paper from\"@material-ui/core/Paper\";import Grid from\"@material-ui/core/Grid\";import Alert from\"@material-ui/lab/Alert\";import{PublicKey}from\"@solana/web3.js\";import{useWallet}from\"@solana/wallet-adapter-react\";import{WalletDialogButton}from\"@solana/wallet-adapter-material-ui\";import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,getCandyMachineState,mintOneToken}from\"./candy-machine\";import{MintButton}from\"./MintButton\";import{getPhase,Phase,PhaseHeader}from\"./PhaseHeader\";import{GatewayProvider}from\"@civic/solana-gateway-react\";import{whitelistSettings,publicSaleSettings,welcomeSettings,MintWelcomeCustomHTML,MintWhitelistCustomHTML,MintPublicSaleCustomHTML}from\"./userSettings\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: 0px;\\n  bottom: -15px;\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n  transform: translate(0%, -50%);\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  width: 100%;\\n  left: 0px;\\n  bottom: 15px;\\n\"])));// add your styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state$g;// const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\nvar rpcUrl=props.rpcHost;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),whiteListTokenBalance=_useState2[0],setWhiteListTokenBalance=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isMinting=_useState4[0],setIsMinting=_useState4[1];// true when user got to press MINT\nvar _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),mintingTotal=_useState6[0],setMintingTotal=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),itemsAvailable=_useState8[0],setItemsAvailable=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),publicKey=_useState10[0],setPublicKey=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),candyMachine=_useState12[0],setCandyMachine=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),price=_useState14[0],setPrice=_useState14[1];var wallet=useWallet();var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var _useState15=useState({open:false,message:\"\",severity:undefined}),_useState16=_slicedToArray(_useState15,2),alertState=_useState16[0],setAlertState=_useState16[1];var onMint=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _document$getElementB,_status,mintTxId,status,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsMinting(true);(_document$getElementB=document.getElementById(\"#identity\"))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context.next=13;break;}_context.next=6;return mintOneToken(candyMachine,wallet.publicKey);case 6:mintTxId=_context.sent[0];status={err:true};if(!mintTxId){_context.next=12;break;}_context.next=11;return awaitTransactionSignatureConfirmation(mintTxId,props.txTimeout,props.connection,\"singleGossip\",true);case 11:status=_context.sent;case 12:if(!((_status=status)!==null&&_status!==void 0&&_status.err)){setAlertState({open:true,message:\"Congratulations! Mint succeeded!\",severity:\"success\"});setMintingTotal(mintingTotal+1);if(whiteListTokenBalance&&whiteListTokenBalance>0)setWhiteListTokenBalance(whiteListTokenBalance-1);}else{setAlertState({open:true,message:\"Mint failed! Please try again!\",severity:\"error\"});}case 13:_context.next=20;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);// TODO: blech:\nmessage=_context.t0.msg||\"Minting failed! Please try again!\";if(!_context.t0.msg){if(!_context.t0.message){message=\"Transaction Timeout! Please try again.\";}else if(_context.t0.message.indexOf(\"0x138\")){}else if(_context.t0.message.indexOf(\"0x137\")){message=\"SOLD OUT!\";}else if(_context.t0.message.indexOf(\"0x135\")){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context.t0.code===311){message=\"SOLD OUT!\";window.location.reload();}else if(_context.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:\"error\"});case 20:_context.prev=20;setIsMinting(false);return _context.finish(20);case 23:case\"end\":return _context.stop();}}},_callee,null,[[0,15,20,23]]);}));return function onMint(){return _ref.apply(this,arguments);};}();useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var cndy;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(anchorWallet){_context2.next=3;break;}console.log(\"anchor wallet not found\");return _context2.abrupt(\"return\");case 3:console.log(\"wallet connected\");if(anchorWallet.publicKey){setPublicKey(anchorWallet.publicKey);}// try {\n//   const balance = await props.connection.getBalance(\n//     anchorWallet.publicKey\n//   );\n//   console.log(\"Sol balance is: \" + balance);\n//   setYourSOLBalance(balance);\n// } catch (e) {\n//   console.log(\"Problem getting fair launch state\");\n//   console.log(e);\n// }\nif(!props.candyMachineId){_context2.next=20;break;}_context2.prev=6;_context2.next=9;return getCandyMachineState(anchorWallet,props.candyMachineId,props.connection);case 9:cndy=_context2.sent;_context2.next=12;return setCandyMachine(cndy);case 12:_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](6);console.log(\"Problem getting candy machine state\");console.log(_context2.t0);case 18:_context2.next=21;break;case 20:console.log(\"No candy machine detected in configuration.\");case 21:case\"end\":return _context2.stop();}}},_callee2,null,[[6,14]]);}))();},[anchorWallet,props.candyMachineId,props.connection]);useEffect(function(){function getTokenAmount(){return _getTokenAmount.apply(this,arguments);}function _getTokenAmount(){_getTokenAmount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _candyMachine$state$w;var _candyMachine$state$w2,tokenAmount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(publicKey&&candyMachine!==null&&candyMachine!==void 0&&(_candyMachine$state$w=candyMachine.state.whitelistMintSettings)!==null&&_candyMachine$state$w!==void 0&&_candyMachine$state$w.mint)){_context3.next=11;break;}_context3.prev=1;_context3.next=4;return props.connection.getParsedTokenAccountsByOwner(publicKey,{mint:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state$w2=candyMachine.state.whitelistMintSettings)===null||_candyMachine$state$w2===void 0?void 0:_candyMachine$state$w2.mint});case 4:tokenAmount=_context3.sent;setWhiteListTokenBalance(tokenAmount.value[0].account.data.parsed.info.tokenAmount.amount);_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);setWhiteListTokenBalance(0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));return _getTokenAmount.apply(this,arguments);}getTokenAmount();if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.itemsAvailable){setItemsAvailable(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.itemsAvailable);}if((candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.itemsRedeemed)==null){setMintingTotal(0);}else{setMintingTotal(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.itemsRedeemed);}if(candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.price){setPrice((candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.price.toNumber())/1000000000);}},[candyMachine,publicKey,props.connection]);var phase=getPhase(candyMachine);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:\"relative\"},children:/*#__PURE__*/_jsx(Paper,{style:{padding:\"34px 24px 90px 24px\",display:\"flex\",borderRadius:6},className:\"minting-box\",children:/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"space-between\",direction:\"column\",children:[/*#__PURE__*/_jsx(PhaseHeader,{phase:phase,candyMachine:candyMachine,rpcUrl:rpcUrl}),/*#__PURE__*/_jsxs(\"div\",{children:[phase===Phase.Welcome&&welcomeSettings.enableCustomHTML&&/*#__PURE__*/_jsx(MintWelcomeCustomHTML,{}),phase===Phase.WhiteListMint&&whitelistSettings.enableCustomHTML&&/*#__PURE__*/_jsx(MintWhitelistCustomHTML,{}),phase===Phase.PublicMint&&publicSaleSettings.enableCustomHTML&&/*#__PURE__*/_jsx(MintPublicSaleCustomHTML,{}),(phase===Phase.PublicMint||Phase.WhiteListMint)&&/*#__PURE__*/_jsxs(_Fragment,{children:[phase===Phase.WhiteListMint&&/*#__PURE__*/_jsxs(\"div\",{className:\"card minting-info text-center\",children:[whiteListTokenBalance>=0?/*#__PURE__*/_jsx(\"h1\",{children:whiteListTokenBalance}):/*#__PURE__*/_jsx(\"div\",{className:\"loading\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Mints to Claim\"})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"space-between\",color:\"textSecondary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"test-stat\",children:(phase===Phase.WhiteListMint||phase===Phase.PublicMint)&&(itemsAvailable!==null&&mintingTotal!==null?/*#__PURE__*/_jsx(\"p\",{children:mintingTotal+\" / \"+itemsAvailable}):/*#__PURE__*/_jsx(\"p\",{className:\"loading\"}))}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end\",children:phase===Phase.Welcome&&welcomeSettings.showPrice||phase===Phase.WhiteListMint||phase===Phase.PublicMint?/*#__PURE__*/_jsx(_Fragment,{children:price?/*#__PURE__*/_jsxs(\"p\",{children:[price,\" Sol\"]}):/*#__PURE__*/_jsx(\"p\",{className:\"loading\"})}):\"\"})]}),!wallet.connected?/*#__PURE__*/_jsxs(ConnectButton,{children:[\"Connect\",\"\"]}):/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction}// // Replace with following when added\n// gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n,gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state=candyMachine.state)===null||_candyMachine$state===void 0?void 0:(_candyMachine$state$g=_candyMachine$state.gatekeeper)===null||_candyMachine$state$g===void 0?void 0:_candyMachine$state$g.gatekeeperNetwork// This is the ignite (captcha) network\n/// Don't need this for mainnet\n,clusterUrl:rpcUrl,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isMinting,onMint:onMint})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isMinting,onMint:onMint})})]})]})]})})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:6000,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};export default Home;","map":{"version":3,"sources":["/Users/abraham/fun/gcksmint/src/Minter.tsx"],"names":["useEffect","useMemo","useState","styled","Container","Snackbar","Paper","Grid","Alert","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","getCandyMachineState","mintOneToken","MintButton","getPhase","Phase","PhaseHeader","GatewayProvider","whitelistSettings","publicSaleSettings","welcomeSettings","MintWelcomeCustomHTML","MintWhitelistCustomHTML","MintPublicSaleCustomHTML","ConnectButton","MintContainer","div","Home","props","rpcUrl","rpcHost","whiteListTokenBalance","setWhiteListTokenBalance","isMinting","setIsMinting","mintingTotal","setMintingTotal","itemsAvailable","setItemsAvailable","publicKey","setPublicKey","candyMachine","setCandyMachine","price","setPrice","wallet","anchorWallet","signAllTransactions","signTransaction","open","message","severity","undefined","alertState","setAlertState","onMint","document","getElementById","click","connected","program","mintTxId","status","err","txTimeout","connection","msg","indexOf","code","window","location","reload","console","log","candyMachineId","cndy","getTokenAmount","state","whitelistMintSettings","mint","getParsedTokenAccountsByOwner","tokenAmount","value","account","data","parsed","info","amount","itemsRedeemed","toNumber","phase","position","padding","display","borderRadius","Welcome","enableCustomHTML","WhiteListMint","PublicMint","showPrice","isActive","gatekeeper","gatekeeperNetwork","autoShowModal"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Snackbar } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  awaitTransactionSignatureConfirmation,\n  CandyMachineAccount,\n  CANDY_MACHINE_PROGRAM,\n  getCandyMachineState,\n  mintOneToken,\n} from \"./candy-machine\";\n\nimport { AlertState } from \"./utils\";\nimport { MintButton } from \"./MintButton\";\nimport { getPhase, Phase, PhaseHeader } from \"./PhaseHeader\";\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\nimport {\n  whitelistSettings,\n  publicSaleSettings,\n  welcomeSettings,\n  MintWelcomeCustomHTML,\n  MintWhitelistCustomHTML,\n  MintPublicSaleCustomHTML,\n} from \"./userSettings\";\n\nconst ConnectButton = styled(WalletDialogButton)`\n  position: absolute;\n  left: 0px;\n  bottom: -15px;\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  transform: translate(0%, -50%);\n`;\n\nconst MintContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  left: 0px;\n  bottom: 15px;\n`; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n\n  connection: anchor.web3.Connection;\n  startDate: number;\n  txTimeout: number;\n  rpcHost: string;\n}\n\nconst Home = (props: HomeProps) => {\n  // const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\n  const rpcUrl = props.rpcHost;\n  const [whiteListTokenBalance, setWhiteListTokenBalance] = useState<number>(0);\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n  const [mintingTotal, setMintingTotal] = useState<number | null>(null);\n  const [itemsAvailable, setItemsAvailable] = useState<number | null>(null);\n  const [publicKey, setPublicKey] = useState<PublicKey>();\n\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n\n  const [price, setPrice] = useState<number | null>(null);\n\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      document.getElementById(\"#identity\")?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        const mintTxId = (\n          await mintOneToken(candyMachine, wallet.publicKey)\n        )[0];\n\n        let status: any = { err: true };\n        if (mintTxId) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintTxId,\n            props.txTimeout,\n            props.connection,\n            \"singleGossip\",\n            true\n          );\n        }\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n\n          setMintingTotal(mintingTotal! + 1);\n\n          if (whiteListTokenBalance && whiteListTokenBalance > 0)\n            setWhiteListTokenBalance(whiteListTokenBalance - 1);\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (!error.message) {\n          message = \"Transaction Timeout! Please try again.\";\n        } else if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!anchorWallet) {\n        console.log(\"anchor wallet not found\");\n        return;\n      }\n      console.log(\"wallet connected\");\n      if(anchorWallet.publicKey){\n      setPublicKey(anchorWallet.publicKey)\n      }\n\n      // try {\n      //   const balance = await props.connection.getBalance(\n      //     anchorWallet.publicKey\n      //   );\n      //   console.log(\"Sol balance is: \" + balance);\n      //   setYourSOLBalance(balance);\n      // } catch (e) {\n      //   console.log(\"Problem getting fair launch state\");\n      //   console.log(e);\n      // }\n\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            props.connection\n          );\n          await setCandyMachine(cndy);\n        } catch (e) {\n          console.log(\"Problem getting candy machine state\");\n          console.log(e);\n        }\n      } else {\n        console.log(\"No candy machine detected in configuration.\");\n      }\n    })();\n  }, [anchorWallet, props.candyMachineId, props.connection]);\n\n  useEffect(() => {\n    async function getTokenAmount() {\n      if (\n        publicKey &&\n        candyMachine?.state.whitelistMintSettings?.mint\n      ) {\n        try {\n          var tokenAmount =\n            await props.connection.getParsedTokenAccountsByOwner(\n              publicKey,\n              { mint: candyMachine?.state.whitelistMintSettings?.mint }\n            );\n          setWhiteListTokenBalance(\n            tokenAmount.value[0].account.data.parsed.info.tokenAmount.amount\n          );\n        } catch {\n          setWhiteListTokenBalance(0);\n        }\n      }\n    }\n\n    getTokenAmount();\n\n    if (candyMachine?.state.itemsAvailable) {\n      setItemsAvailable(candyMachine?.state.itemsAvailable);\n    }\n\n    if (candyMachine?.state.itemsRedeemed == null) {\n      setMintingTotal(0);\n    } else {\n      setMintingTotal(candyMachine?.state.itemsRedeemed);\n    }\n\n    if (candyMachine?.state.price) {\n      setPrice(candyMachine?.state.price.toNumber() / 1000000000);\n    }\n  }, [candyMachine, publicKey, props.connection]);\n\n  const phase = getPhase(candyMachine);\n\n  return (\n    <Container>\n      <Container maxWidth=\"xs\" style={{ position: \"relative\" }}>\n        <Paper\n          style={{\n            padding: \"34px 24px 90px 24px\",\n            display: \"flex\",\n\n            borderRadius: 6,\n          }}\n          className=\"minting-box\"\n        >\n          <Grid container justifyContent=\"space-between\" direction=\"column\">\n            <PhaseHeader\n              phase={phase}\n              candyMachine={candyMachine}\n              rpcUrl={rpcUrl}\n            />\n\n            <div>\n              {phase === Phase.Welcome && welcomeSettings.enableCustomHTML && (\n                <MintWelcomeCustomHTML />\n              )}\n              {phase === Phase.WhiteListMint &&\n                whitelistSettings.enableCustomHTML && (\n                  <MintWhitelistCustomHTML />\n                )}\n              {phase === Phase.PublicMint &&\n                publicSaleSettings.enableCustomHTML && (\n                  <MintPublicSaleCustomHTML />\n                )}\n\n              {(phase === Phase.PublicMint || Phase.WhiteListMint) && (\n                <>\n                  {phase === Phase.WhiteListMint && (\n                    <div className=\"card minting-info text-center\">\n                      {whiteListTokenBalance >= 0 ? (\n                        <h1>{whiteListTokenBalance}</h1>\n                      ) : (\n                        <div className=\"loading\"></div>\n                      )}\n\n                      <div>\n                        <p>Mints to Claim</p>\n                      </div>\n                    </div>\n                  )}\n\n                  <Grid\n                    container\n                    justifyContent=\"space-between\"\n                    color=\"textSecondary\"\n                  >\n                    <div className=\"test-stat\">\n                      {(phase === Phase.WhiteListMint ||\n                        phase === Phase.PublicMint) &&\n                        (itemsAvailable !== null && mintingTotal !== null ? (\n                          <p>{mintingTotal + \" / \" + itemsAvailable}</p>\n                        ) : (\n                          <p className=\"loading\"></p>\n                        ))}\n                    </div>\n\n                    <div className=\"text-end\">\n                      {(phase === Phase.Welcome && welcomeSettings.showPrice) ||\n                      phase === Phase.WhiteListMint ||\n                      phase === Phase.PublicMint ? (\n                        <>\n                          {price ? (\n                            <p>{price} Sol</p>\n                          ) : (\n                            <p className=\"loading\"></p>\n                          )}\n                        </>\n                      ) : (\n                        \"\"\n                      )}\n\n                      {/* {formatSol(yourSOLBalance || 0).toLocaleString()} SOL */}\n                    </div>\n                  </Grid>\n\n                  {!wallet.connected ? (\n                    <ConnectButton>Connect{\"\"}</ConnectButton>\n                  ) : (\n                    <MintContainer>\n                      {candyMachine?.state.isActive &&\n                      candyMachine?.state.gatekeeper &&\n                      wallet.publicKey &&\n                      wallet.signTransaction ? (\n                        <GatewayProvider\n                          wallet={{\n                            publicKey:\n                              wallet.publicKey ||\n                              new PublicKey(CANDY_MACHINE_PROGRAM),\n                            //@ts-ignore\n                            signTransaction: wallet.signTransaction,\n                          }}\n                          // // Replace with following when added\n                          // gatekeeperNetwork={candyMachine.state.gatekeeper_network}\n                          gatekeeperNetwork={\n                            candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                          } // This is the ignite (captcha) network\n                          /// Don't need this for mainnet\n                          clusterUrl={rpcUrl}\n                          options={{ autoShowModal: false }}\n                        >\n                          <MintButton\n                            candyMachine={candyMachine}\n                            isMinting={isMinting}\n                            onMint={onMint}\n                          />\n                        </GatewayProvider>\n                      ) : (\n                        <MintButton\n                          candyMachine={candyMachine}\n                          isMinting={isMinting}\n                          onMint={onMint}\n                        />\n                      )}\n                    </MintContainer>\n                  )}\n                </>\n              )}\n            </div>\n          </Grid>\n        </Paper>\n      </Container>\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}